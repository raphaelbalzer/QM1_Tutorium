[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "QM1-Tutorium",
    "section": "",
    "text": "1 Einführung",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einführung</span>"
    ]
  },
  {
    "objectID": "index.html#willkommen",
    "href": "index.html#willkommen",
    "title": "QM1-Tutorium",
    "section": "1.1 Willkommen!",
    "text": "1.1 Willkommen!\nHerzlich Willkommen zum QM1-Tutorium! In diesem Semester lernt ihr die Basics zum Thema Datenanalyse und Vorhersagemodellierung, insbesondere lineare Regression. Auf dieser Seite findet ihr hier sämtliche Lehrmaterialien wie Aufgaben samt Lösungen, Fallstudien, wichtige Befehle und nützliche Links.\nWir wünschen euch viel Erfolg!\nLiebe Grüße\nEmilia und Raphael",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einführung</span>"
    ]
  },
  {
    "objectID": "index.html#lernziele",
    "href": "index.html#lernziele",
    "title": "QM1-Tutorium",
    "section": "1.2 Lernziele",
    "text": "1.2 Lernziele\nVielleicht habt ihr euch auch schon die Fragen gestellt: “Was lernt man in QM1? Und wozu braucht man das?”\nStellt euch vor, wir wollen etwas bauen. Wir haben also ein Endprodukt, wobei wir Bauteile und Werkzeug brauchen, um dies zu bauen.\nVorhersagemodellierung: Das ist unser Endprodukt. Doch was ist das überhaupt?\nWir wollen bestimmte Kennwerte vorhersagen, also z.B. aufgrund von gewissen Daten, die wir zu Immobilien haben (Größe, Zimmeranzahl, Garten, Garage etc.), vorhersagen, wie viel die Immobilie kosten wird. Klingt logisch oder?\n\n➝ Doch was für Bauteile brauchen wir dazu?\n\nExplorative Datenanalyse (EDA): Hier werden Daten bereinigt (z.B. fehlende Werte gelöscht oder ersetzt), analysiert (was haben wir überhaupt an Daten und was sagen sie aus?) und visualisiert (wie sind die Daten verteilt? Gibt es Muster? Welche Beziehungen haben die Variablen untereinander?), um Einblicke zu gewinnen und fundierte Entscheidungen zu treffen (eine solche Entscheidung könnte z.B. sein, welche Prädiktoren, also Variablen, die unsere gesuchte Variable vorhersagen, in dem Fall der Immobilienwert, wichtig sind und welche nicht).\n\n\nLineare Modelle: Helfen uns, Vorhersagen für unbekannte Daten zu machen, indem sie annehmen, dass die Beziehung zwischen Variablen linear ist (z.B. wenn die Wohnfläche größer ist, dann steigt auch der Immobilienpreis ➝ Das lineare Modell würde also für größere Häuser einen höheren Preis vorhersagen).\n\n\n\n\n\n\n\n\n\n\n\n➝ Welche Werkzeuge brauchen wir dazu?\n\n\nUnser Werkzeugkasten ist das Programm R, darin haben wir alles, was wir brauchen, um mit den Bauteilen unser Endprodukt zu bauen. Innerhalb unseres Werkzeugkasten haben wir natürlich verschiedene Werkzeuge, die in R Pakete heißen. Mit jedem Paket können wir andere Sachen machen (zum Beispiel Daten visualisieren mit dem Paket `ggplot`.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einführung</span>"
    ]
  },
  {
    "objectID": "index.html#r-setup",
    "href": "index.html#r-setup",
    "title": "QM1-Tutorium",
    "section": "1.3 R Setup",
    "text": "1.3 R Setup\nIhr braucht 2 Programme auf eurem Rechner:\n\nR: ist die Programmiersprache, die im Hintergrung alle Berechnungen durchführt und ohne die ihr nichts machen könnt.\nR Studio: Grafische Benutzeroberfläche, um R bequem verwenden zu können. Das wird eure Arbeitsumgebung sein, denn mit R ohne Interface zu arbeiten, ist sehr unbequem.\n\n\n➝ Ihr könnt es euch so vorstellen: R ist der Motor und R Studio das Lenkrad!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Einführung</span>"
    ]
  },
  {
    "objectID": "Aufgaben1.html",
    "href": "Aufgaben1.html",
    "title": "2  Aufgaben",
    "section": "",
    "text": "2.1 Aufgabe 1\nErstelle eine Variable V1, die die Zahl 4 enthält und eine zweite V2, die die Zahl 3 enthält\nSubtrahiere V2 von V1\nDefiniere den Rechenvorgang als neue Variable V3 und überprüfe, ob die Variable gleich 1 ist",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aufgaben</span>"
    ]
  },
  {
    "objectID": "Aufgaben1.html#aufgabe-2",
    "href": "Aufgaben1.html#aufgabe-2",
    "title": "2  Aufgaben",
    "section": "2.2 Aufgabe 2",
    "text": "2.2 Aufgabe 2\nErstellte einen Vektor V4, der die Zahlen 1 bis 20 enthält\nBerechne den Mittelwert des Vektors\nBerechne den Median des Vektors\nBerechne die Standardabweichung des Vektors\nNutze den Befehl describe_distribution()\nBerechne den Mittelwert eines Vektors, der die Zahlen 1 bis 13 enthält",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aufgaben</span>"
    ]
  },
  {
    "objectID": "Aufgaben1.html#aufgabe-3",
    "href": "Aufgaben1.html#aufgabe-3",
    "title": "2  Aufgaben",
    "section": "2.3 Aufgabe 3",
    "text": "2.3 Aufgabe 3\nKorrigiere den Fehler in der Syntax: sum(x = c(13, 5, 27, 4)",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aufgaben</span>"
    ]
  },
  {
    "objectID": "Aufgaben1.html#aufgabe-4",
    "href": "Aufgaben1.html#aufgabe-4",
    "title": "2  Aufgaben",
    "section": "2.4 Aufgabe 4",
    "text": "2.4 Aufgabe 4\nGegeben sei diese Syntax:\n\nx &lt;- 8  \nY &lt;- 4  \n\nLässt man folgende Syntax laufen, so kommt eine Fehlermeldung:\nX + Y\nError in eval(expr, envir, enclos): object 'X' not found\nGeben Sie die korrekte Syntax ein (zur Berechnung der Summe), die nicht zu einer Fehlermeldung führt",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aufgaben</span>"
    ]
  },
  {
    "objectID": "Aufgaben1.html#aufgabe-5",
    "href": "Aufgaben1.html#aufgabe-5",
    "title": "2  Aufgaben",
    "section": "2.5 Aufgabe 5",
    "text": "2.5 Aufgabe 5\nWählen Sie die syntaktisch korrekten Varianten aus, um einer Variablen den Wert (Zahl) 42 zuzuweisen.\n\nloesung &lt;-42\n\nloesung &lt; - 42\n\nloesung-&gt;42\n\nloesung==42\n\nloesung&lt;-“42”\n\nloesung = 42",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Aufgaben</span>"
    ]
  },
  {
    "objectID": "Lösungen1.html",
    "href": "Lösungen1.html",
    "title": "3  Lösungen",
    "section": "",
    "text": "3.1 Lösung 1\n# Aufgabe 1\n\nlibrary(easystats)\n\n# Attaching packages: easystats 0.7.1 (red = needs update)\n✔ bayestestR  0.13.2    ✖ correlation 0.8.4  \n✖ datawizard  0.10.0    ✖ effectsize  0.8.7  \n✖ insight     0.19.10   ✖ modelbased  0.8.7  \n✖ performance 0.11.0    ✖ parameters  0.21.6 \n✔ report      0.5.8     ✔ see         0.8.4  \n\nRestart the R-Session and update packages with `easystats::easystats_update()`.\n\n#1.1\nV1 &lt;- 4\nV2 &lt;- 3\n\n#1.2\nV1 - V2\n\n[1] 1\n\n#1.3\nV3 &lt;- V1-V2\nV3 == 1\n\n[1] TRUE",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lösungen</span>"
    ]
  },
  {
    "objectID": "Lösungen1.html#lösung-2",
    "href": "Lösungen1.html#lösung-2",
    "title": "3  Lösungen",
    "section": "3.2 Lösung 2",
    "text": "3.2 Lösung 2\n\n#Aufgabe 2\n\n#2.1\nV4 &lt;- c(1:20)\n\n#2.2\nmean(V4)\n\n[1] 10.5\n\n#2.3\nmedian(V4)\n\n[1] 10.5\n\n#2.4\nsd(V4)\n\n[1] 5.91608\n\n#2.5\ndescribe_distribution(V4)\n\n\n  \n\n\n#2.6\nmean(c(1:13))\n\n[1] 7",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lösungen</span>"
    ]
  },
  {
    "objectID": "Lösungen1.html#lösung-3",
    "href": "Lösungen1.html#lösung-3",
    "title": "3  Lösungen",
    "section": "3.3 Lösung 3",
    "text": "3.3 Lösung 3\n\nsum(x = c(13, 5, 27, 4))\n\n[1] 49",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lösungen</span>"
    ]
  },
  {
    "objectID": "Lösungen1.html#lösung-4",
    "href": "Lösungen1.html#lösung-4",
    "title": "3  Lösungen",
    "section": "3.4 Lösung 4",
    "text": "3.4 Lösung 4\n\nx &lt;- 8\nY &lt;- 4\n\nx + Y\n\n[1] 12",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lösungen</span>"
    ]
  },
  {
    "objectID": "Lösungen1.html#lösung-5",
    "href": "Lösungen1.html#lösung-5",
    "title": "3  Lösungen",
    "section": "3.5 Lösung 5",
    "text": "3.5 Lösung 5\n\nloesung &lt;-42\nloesung = 42",
    "crumbs": [
      "R kennenlernen",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lösungen</span>"
    ]
  },
  {
    "objectID": "Aufgaben_Dinos.html",
    "href": "Aufgaben_Dinos.html",
    "title": "4  Dinojudo",
    "section": "",
    "text": "4.1 Aufgabe 1\nImportiere den Datensatz “Jurassic_Park” (https://raw.githubusercontent.com/raphaelbalzer/Tutorium_QM1_SoSe23/main/Jurassic_Park.csv)\nLass dir die obersten zehn Reihen des Datensatzes in der Konsole anzeigen\nLass dir die unterstens zehn Reihen des Datensatzes in der Konsole anzeigen",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dinojudo</span>"
    ]
  },
  {
    "objectID": "Aufgaben_Dinos.html#aufgabe-2",
    "href": "Aufgaben_Dinos.html#aufgabe-2",
    "title": "4  Dinojudo",
    "section": "4.2 Aufgabe 2",
    "text": "4.2 Aufgabe 2\nErstelle eine zweiten Datensatz “Jurassic_Park2” ohne die Spalten “link”, “taxonomy” und “period”\nOrdne den Datensatz jetzt so an, dass die Dinos mit der größten Länge zuerst angezeigt werden\nWie viele Dinos gibt es, die länger als 7.5 Meter sind?",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dinojudo</span>"
    ]
  },
  {
    "objectID": "Aufgaben_Dinos.html#aufgabe-3",
    "href": "Aufgaben_Dinos.html#aufgabe-3",
    "title": "4  Dinojudo",
    "section": "4.3 Aufgabe 3",
    "text": "4.3 Aufgabe 3\nWie lang ist der durchschnittliche Dino?\nGibt es in dem Datensatz mehr Fleischfresser oder Pflanzenfresser?\nWer hat den Dino “gobisaurus” benannt?",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dinojudo</span>"
    ]
  },
  {
    "objectID": "Aufgaben_Dinos.html#aufgabe-4",
    "href": "Aufgaben_Dinos.html#aufgabe-4",
    "title": "4  Dinojudo",
    "section": "4.4 Aufgabe 4",
    "text": "4.4 Aufgabe 4\nHat die Ernährung der Dinos einen großen Einfluss auf deren größe?\nWo lebten die meisten “armoured dinosaur”?\nWas war die kleinste Länge eines “small theropod”?\nWas haben die meisten Dinos in den USA damals gegessen?",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dinojudo</span>"
    ]
  },
  {
    "objectID": "Aufgaben_Dinos.html#aufgabe-5",
    "href": "Aufgaben_Dinos.html#aufgabe-5",
    "title": "4  Dinojudo",
    "section": "4.5 Aufgabe 5",
    "text": "4.5 Aufgabe 5\nWie lang war der durchschnittliche “large theropod” der in “North Africa” lebte und sich von Fleisch ernärte im Vergleich zu der durschnittlichen Länge eines “sauropod”, der sich von Pflanzen ernährte und in “China” lebte?",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dinojudo</span>"
    ]
  },
  {
    "objectID": "Lösungen_Dinos.html",
    "href": "Lösungen_Dinos.html",
    "title": "5  Lösungen Dinojudo",
    "section": "",
    "text": "5.1 Lösung 1\n# Aufgabe 1 \n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n#1.1\nlibrary(readr)\nJurassic_Park &lt;- read_csv(\"https://raw.githubusercontent.com/raphaelbalzer/Tutorium_QM1_SoSe23/main/Jurassic_Park.csv\")\n\nNew names:\nRows: 291 Columns: 11\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): name, diet, period, lived_in, type, taxonomy, named_by, species, link dbl\n(2): ...1, Length\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n#1.2\nhead(Jurassic_Park, n = 10)\n\n\n  \n\n\n#1.3\ntail(Jurassic_Park, n = 10)",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Lösungen Dinojudo</span>"
    ]
  },
  {
    "objectID": "Lösungen_Dinos.html#lösung-2",
    "href": "Lösungen_Dinos.html#lösung-2",
    "title": "5  Lösungen Dinojudo",
    "section": "5.2 Lösung 2",
    "text": "5.2 Lösung 2\n\n# Aufgabe 2\n\n#2.1\nJurassic_Park2 &lt;- Jurassic_Park %&gt;% \n  select(name, diet,lived_in,type,Length, species, named_by)\n\n#2.2\nJurassic_Park2 %&gt;% \n  arrange(-Length) -&gt; Jurassic_Park2\n\n#2.3\nJurassic_Park2 %&gt;% \n  count(Length &gt; 7.5)",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Lösungen Dinojudo</span>"
    ]
  },
  {
    "objectID": "Lösungen_Dinos.html#lösung-3",
    "href": "Lösungen_Dinos.html#lösung-3",
    "title": "5  Lösungen Dinojudo",
    "section": "5.3 Lösung 3",
    "text": "5.3 Lösung 3\n\n# Aufgabe 3\n\n#3.1\nJurassic_Park %&gt;% \n  summarise(mean(Length))\n\n\n  \n\n\n#3.2\nJurassic_Park %&gt;% \n  count(diet)\n\n\n  \n\n\n#3.3\nJurassic_Park2 %&gt;% \n  select(named_by, name) %&gt;% \n  filter(name == \"gobisaurus\")",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Lösungen Dinojudo</span>"
    ]
  },
  {
    "objectID": "Lösungen_Dinos.html#lösung-4",
    "href": "Lösungen_Dinos.html#lösung-4",
    "title": "5  Lösungen Dinojudo",
    "section": "5.4 Lösung 4",
    "text": "5.4 Lösung 4\n\n#4.1\nJurassic_Park %&gt;% \n  group_by(diet) %&gt;% \n  summarise(mean(Length))\n\n\n  \n\n\n#4.2\nJurassic_Park %&gt;% \n  select(type, lived_in) %&gt;% \n  filter(type == \"armoured dinosaur\") %&gt;% \n  count(lived_in)\n\n\n  \n\n\n#4.3\nJurassic_Park %&gt;% \n  select(Length, type) %&gt;% \n  filter(type == \"small theropod\") %&gt;% \n  arrange(Length)\n\n\n  \n\n\n#4.4\nJurassic_Park %&gt;% \n  select(diet, lived_in) %&gt;%\n  filter(lived_in == \"USA\") %&gt;% \n  count(diet)",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Lösungen Dinojudo</span>"
    ]
  },
  {
    "objectID": "Lösungen_Dinos.html#lösung-5",
    "href": "Lösungen_Dinos.html#lösung-5",
    "title": "5  Lösungen Dinojudo",
    "section": "5.5 Lösung 5",
    "text": "5.5 Lösung 5\n\n# Dino1\nJurassic_Park %&gt;% \n  select(type, diet, lived_in, Length) %&gt;% \n  filter(lived_in == \"North Africa\",\n         type == \"large theropod\",\n         diet == \"carnivorous\") %&gt;%\n  summarise(mean(Length))\n\n\n  \n\n\n# Dino2\nJurassic_Park %&gt;% \n  select(type, diet, lived_in, Length) %&gt;% \n  filter(lived_in == \"China\",\n         type == \"sauropod\",\n         diet == \"herbivorous\") %&gt;%\n  summarise(mean(Length))",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Lösungen Dinojudo</span>"
    ]
  },
  {
    "objectID": "Aufgaben_plague.html",
    "href": "Aufgaben_plague.html",
    "title": "6  Aufgaben Plague",
    "section": "",
    "text": "6.1 Aufgabe 1\nImportiere den Datensatz (https://raw.githubusercontent.com/SurgicalInformatics/healthyr_book/master/data/global_burden_disease_cause-year-sex-income.csv) und gib an, in welchem Jahr es die meisten Tode gab",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Aufgaben Plague</span>"
    ]
  },
  {
    "objectID": "Aufgaben_plague.html#aufgabe-2",
    "href": "Aufgaben_plague.html#aufgabe-2",
    "title": "6  Aufgaben Plague",
    "section": "6.2 Aufgabe 2",
    "text": "6.2 Aufgabe 2\n2.1 Gab es ein Jahr, in dem mehr Frauen als Männer gestorben sind?\n2.2 Sind über den gesamten Zeitraum hinweg mehr wohlhabende (High) Männer als arme (Low) Frauen gestorben?\n2.3 Gib für jede Todesursache ab den Jahren 2005 von Männern mit niedrigem Einkommen die durchschnittliche Anzahl der Tode und die gesamte Anzahl an",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Aufgaben Plague</span>"
    ]
  },
  {
    "objectID": "Aufgaben_plague.html#aufgabe-3",
    "href": "Aufgaben_plague.html#aufgabe-3",
    "title": "6  Aufgaben Plague",
    "section": "6.3 Aufgabe 3",
    "text": "6.3 Aufgabe 3\n3.1 Gib an, wie viele Menschen insgesamt in den verschiedenen Jahren durch welche Ursachen gestorben sind\n3.2 In welcher Einkommensgruppe gab es die meisten Tode über die gesamte Zeit hinweg?",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Aufgaben Plague</span>"
    ]
  },
  {
    "objectID": "Aufgaben_plague.html#aufgabe-4",
    "href": "Aufgaben_plague.html#aufgabe-4",
    "title": "6  Aufgaben Plague",
    "section": "6.4 Aufgabe 4",
    "text": "6.4 Aufgabe 4\nWie viel Prozent der Todesfälle sind über den gesamten Zeitraum hinweg auf die verschiedenen Ursachen zurück zu führen?",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Aufgaben Plague</span>"
    ]
  },
  {
    "objectID": "Lösungen_plague.html",
    "href": "Lösungen_plague.html",
    "title": "7  Lösungen Plague",
    "section": "",
    "text": "7.1 Lösung 1\n#Aufgabe 1 \n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nDeaths &lt;- read.csv(\"https://raw.githubusercontent.com/SurgicalInformatics/healthyr_book/master/data/global_burden_disease_cause-year-sex-income.csv\")\n\nsummary_data1 &lt;- \n  Deaths%&gt;% \n  group_by(year) %&gt;% \n  summarise(total_per_year = sum(deaths_millions))",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Lösungen Plague</span>"
    ]
  },
  {
    "objectID": "Lösungen_plague.html#lösung-2.1",
    "href": "Lösungen_plague.html#lösung-2.1",
    "title": "7  Lösungen Plague",
    "section": "7.2 Lösung 2.1",
    "text": "7.2 Lösung 2.1\n\n# Aufgabe 2.1\n\nsummary_data2 &lt;- \n  Deaths %&gt;% \n  group_by(sex, year) %&gt;% \n  summarise(sum(deaths_millions))\n\n`summarise()` has grouped output by 'sex'. You can override using the `.groups`\nargument.",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Lösungen Plague</span>"
    ]
  },
  {
    "objectID": "Lösungen_plague.html#lösung-2.2",
    "href": "Lösungen_plague.html#lösung-2.2",
    "title": "7  Lösungen Plague",
    "section": "7.3 Lösung 2.2",
    "text": "7.3 Lösung 2.2\n\n# Aufgabe 2.2\nDeaths %&gt;% \n  select(deaths_millions, income, sex) %&gt;% \n  filter(sex == \"Male\") %&gt;% \n  filter(income == \"High\")%&gt;% \n  summarise(Tode = sum(deaths_millions))\n\n\n  \n\n\nDeaths %&gt;% \n  select(deaths_millions, income, sex) %&gt;% \n  filter(sex == \"Female\")%&gt;% \n  filter(income == \"Low\") %&gt;% \n  summarise(Tode = sum(deaths_millions))",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Lösungen Plague</span>"
    ]
  },
  {
    "objectID": "Lösungen_plague.html#lösung-2.3",
    "href": "Lösungen_plague.html#lösung-2.3",
    "title": "7  Lösungen Plague",
    "section": "7.4 Lösung 2.3",
    "text": "7.4 Lösung 2.3\n\n# Aufgabe 2.3\n\nDeaths %&gt;%\n  group_by(cause) %&gt;% \n  filter(year &gt;= 2005,\n         sex == \"Male\",\n         income == \"Low\") %&gt;% \n  summarise(Total = sum(deaths_millions), \n            durchschnittliche = mean(deaths_millions))",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Lösungen Plague</span>"
    ]
  },
  {
    "objectID": "Lösungen_plague.html#lösung-3.1",
    "href": "Lösungen_plague.html#lösung-3.1",
    "title": "7  Lösungen Plague",
    "section": "7.5 Lösung 3.1",
    "text": "7.5 Lösung 3.1\n\n# Aufgabe 3.1 \n\nsummary_data3 &lt;- \n  Deaths %&gt;% \n  group_by(year, cause) %&gt;% \n  summarise(total_per_cause = sum(deaths_millions))\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Lösungen Plague</span>"
    ]
  },
  {
    "objectID": "Lösungen_plague.html#lösung-3.2",
    "href": "Lösungen_plague.html#lösung-3.2",
    "title": "7  Lösungen Plague",
    "section": "7.6 Lösung 3.2",
    "text": "7.6 Lösung 3.2\n\n# Aufgabe 3.2\n\nDeaths %&gt;%\n  group_by(income) %&gt;% \n  summarise(Total = sum(deaths_millions))\n\n\n  \n\n\nDeaths %&gt;% \n  summarise(sum(deaths_millions))",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Lösungen Plague</span>"
    ]
  },
  {
    "objectID": "Lösungen_plague.html#lösung-4",
    "href": "Lösungen_plague.html#lösung-4",
    "title": "7  Lösungen Plague",
    "section": "7.7 Lösung 4",
    "text": "7.7 Lösung 4\n\n# Aufgabe 4\n\nsummary_data4 &lt;- Deaths %&gt;%\n  summarise(Gesamt = sum(deaths_millions))\n\n\nsummary_data5 &lt;- Deaths %&gt;%\n  group_by(cause)%&gt;%\n  summarise(total_per_cause = sum(deaths_millions)) %&gt;% \n  mutate(InProzent = total_per_cause/359.85)",
    "crumbs": [
      "Data Wrangling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Lösungen Plague</span>"
    ]
  },
  {
    "objectID": "Fallstudie_Smartphone.html",
    "href": "Fallstudie_Smartphone.html",
    "title": "8  Fallstudie Smartphone",
    "section": "",
    "text": "8.1 Vorverarbeitung",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fallstudie Smartphone</span>"
    ]
  },
  {
    "objectID": "Fallstudie_Smartphone.html#vorverarbeitung",
    "href": "Fallstudie_Smartphone.html#vorverarbeitung",
    "title": "8  Fallstudie Smartphone",
    "section": "",
    "text": "8.1.1 Umbenennung der Spalten\n\nnames(data)[15] &lt;- \"sex\"\nnames(data)[16] &lt;- \"age\"\nnames(data)[17] &lt;- \"os\"\nnames(data)[18] &lt;- \"price\"\n\nitem_labels_new &lt;- paste0(\"item\", 1:11)\nnames(data)[3:13] &lt;- item_labels_new\n\n\n\n8.1.2 Umgang mit fehlenden Werten\nZunächst überprüfen wir, ob und wenn ja, in welchen Spalten es fehlende Werte gibt.\n\ndata %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\nBei den Spalten alter und preis scheint es einige fehlende Werte zu geben. Wir ersetzen diese mit dem Mittelwert der Spalten, um die anderen ausgefüllten Spalten nicht zu verlieren. Hierzu müssen wir alle numerischen Spalten in das Format double umwandenln.\n\ndata &lt;- data %&gt;%\n  mutate(across(where(is.numeric), as.double))\n\ndata &lt;- data %&gt;%\n  mutate(across(where(is.numeric), ~replace_na(., mean(., na.rm = TRUE))))\n\n\ndata &lt;- data %&gt;% \n  mutate(sex = factor(sex),\n         os = factor(os))\n\ndata &lt;- data %&gt;% \n  mutate(sex = case_when(sex == NA ~ \"missing\", \n                                sex == \"Mann\" ~ \"männlich\",\n                                sex == \"Frau\" ~ \"weiblich\"))\ndata &lt;- data %&gt;% \n  mutate(os = case_when(os == NA ~ \"missing\", \n                                os == \"iOS\" ~ \"iOS\",\n                                os == \"Android\" ~ \"Android\"))",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fallstudie Smartphone</span>"
    ]
  },
  {
    "objectID": "Fallstudie_Smartphone.html#eda",
    "href": "Fallstudie_Smartphone.html#eda",
    "title": "8  Fallstudie Smartphone",
    "section": "8.2 EDA",
    "text": "8.2 EDA\nJetzt können wir uns die Daten genauer unter die Lupe nehmen.\n\ndata %&gt;% \n  group_by(sex) %&gt;% \n  summarise(mean(price))\n\n\n  \n\n\n\n\ndata %&gt;% \n  group_by(os) %&gt;% \n  summarise(mean(price))\n\n\n  \n\n\n\n\n8.2.1 Berechnung des Smartphone-Addiction-Scores\nZur Erstellung einer Spalte, die das allgemeine Maß der Smartphone-Abhängigkeit angibt, berechnen wir einfach den Mittelwert aller Items:\n\ndata &lt;- data %&gt;% \n  mutate(addiction_score = rowMeans(across(starts_with(\"item\")))) %&gt;% \n  mutate(is_addicted =\n           case_when(addiction_score &gt; 3.1 & sex == \"männlich\" ~ \"addicted\",\n                     addiction_score &gt; 3.3 & sex == \"weiblich\" ~ \"addicted\",\n                     TRUE ~ \"not-addicted\"))\n\n\ndata %&gt;%  \n  ggdensity(x = \"addiction_score\", \n            color = \"sex\")\n\n\n\n\n\n\n\n\n\nsmartphone_count &lt;- \ndata %&gt;% \n  group_by(sex) %&gt;%  \n  count(is_addicted)\n\n\nsmartphone_count %&gt;%\n  drop_na() %&gt;% \n  plot_bar(by = \"sex\")",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fallstudie Smartphone</span>"
    ]
  },
  {
    "objectID": "Fallstudie_Smartphone.html#modellierung",
    "href": "Fallstudie_Smartphone.html#modellierung",
    "title": "8  Fallstudie Smartphone",
    "section": "8.3 Modellierung",
    "text": "8.3 Modellierung\nZunächst erstellen wir das Modell und bewerten die Modellgüte\n\nlm &lt;- lm(addiction_score ~ 1, data = data)\n\nmae(lm)\n\n[1] 0.5877067\n\n\nDann visualisieren wir das Modell:\n\ndata %&gt;% \n  mutate(id = 1:n(),\n         mean_addiction_score = mean(addiction_score),\n         residual = addiction_score - mean_addiction_score) %&gt;% \n  ggplot(aes(x = id, y = addiction_score)) +\n  geom_point() +\n  geom_hline(aes(yintercept = mean_addiction_score), color = \"#6388b4\") +\n  geom_label(aes(x = 0, y = mean_addiction_score, label = \"MW\"), color = \"#6388b4\", fill = \"white\") +\n  geom_segment(aes(x = id, xend = id, y = addiction_score, yend = mean_addiction_score), alpha = 0.5, color = \"grey\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndata %&gt;% \n  drop_na() %&gt;% \n  ggplot(aes(age,addiction_score, color = sex)) + \n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_pastel\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fallstudie Smartphone</span>"
    ]
  },
  {
    "objectID": "QM1_Tutorium_Fallstudie_IRIS.html",
    "href": "QM1_Tutorium_Fallstudie_IRIS.html",
    "title": "9  Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes",
    "section": "",
    "text": "9.1 Packages laden\nlibrary(tidyverse)\nlibrary(datasets)\nlibrary(visdat)",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes</span>"
    ]
  },
  {
    "objectID": "QM1_Tutorium_Fallstudie_IRIS.html#datenimport",
    "href": "QM1_Tutorium_Fallstudie_IRIS.html#datenimport",
    "title": "9  Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes",
    "section": "9.2 Datenimport",
    "text": "9.2 Datenimport\n\ndata(iris)\nview(iris)",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes</span>"
    ]
  },
  {
    "objectID": "QM1_Tutorium_Fallstudie_IRIS.html#datenjudo",
    "href": "QM1_Tutorium_Fallstudie_IRIS.html#datenjudo",
    "title": "9  Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes",
    "section": "9.3 Datenjudo",
    "text": "9.3 Datenjudo\n\n9.3.1 Datensatz auf fehlende Daten prüfen\n\niris %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\nWir sehen: Es gibt in keiner Spalte fehlende Werte. Das heißt, wir brauchen uns darüber schon einmal keine Gedanken zu machen.\n\n\n9.3.2 Überblick über die Variablentypen\nWir können uns einen Überblick über die verschiedenen Variablentypen verschaffen, indem wir uns für jede Variable ihren Typ ausgeben lassen.\n\niris %&gt;% \n  sapply(class)\n\nSepal.Length  Sepal.Width Petal.Length  Petal.Width      Species \n   \"numeric\"    \"numeric\"    \"numeric\"    \"numeric\"     \"factor\" \n\n\nWir sehen nun, dass alle Variablen numerisch skaliert sind, außer Species, welches eine Faktorvariable ist.",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes</span>"
    ]
  },
  {
    "objectID": "QM1_Tutorium_Fallstudie_IRIS.html#datenvisualisierung",
    "href": "QM1_Tutorium_Fallstudie_IRIS.html#datenvisualisierung",
    "title": "9  Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes",
    "section": "9.4 Datenvisualisierung",
    "text": "9.4 Datenvisualisierung\n\n9.4.1 Überblick über die Variablentypen\nMit dem Befehl vis_dat können wir uns alternativ zu sapply auch noch einen graphischen Überblick über die Variablen verschaffen. Sollte es NA’s geben, wären diese auch ungefähr zu sehen.\n\nvisdat::vis_dat(iris)\n\n\n\n\n\n\n\n\n\n\n9.4.2 Verteilungen\nEs kann sinnvoll sein, sich die Verteilungen der Variablen anzusehen, da je nach Verteilung weitere Aktionen notwendig sein können, um mit den Variablen sinnvoll zu arbeiten. Dazu aber bald mehr. Beispielsweise erstellen wir hier ein Histogramm für Sepal.Width mit ggplot, indem wir der x-Achse Sepal.Width zuweisen und den geomtyp mit geom_histogram festlegen.\n\nggplot(iris, aes(x = Sepal.Width)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nMan sieht, dass diese Verteilung einer Normalverteilung recht nahe kommt. Mit diesem Plot haben wir uns jetzt die Blütenbreite aller Spezies insgesamt angeschaut. Wir können uns aber auch die Verteilung für jede Spezies separat anzeigen lassen. Das geht mit der Funktion facet_wrap.\n\nggplot(iris, aes(x = Sepal.Width)) +\n  geom_histogram() +\n  facet_wrap(~Species)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nJetzt sehen wir alle spezifischen Verteilungen nebeneinander in einer Reihe. Wenn wir die Diagramme auch noch unterschiedlich einfärben wollen, müssen wir innerhalb einer aes-Funktion noch die Spezies für die Füllung definieren. Das sieht dann folgendermaßen aus:\n\nggplot(iris, aes(x = Sepal.Width, fill = Species)) +\n  geom_histogram() +\n  facet_wrap(~Species)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\n9.4.3 Scatterplots\nUm zu sehen, wie die Werte zweier numerischer Variablen im Verhältnis zueinander aussehen, kann man Scatterplots erstellen. Hierzu legt man für die x und y-Achse die entsprechenden Variablen fest und definiert den geomtyp geom_point.\n\nggplot(iris, aes(x = Sepal.Length, y = Petal.Width)) +\n  geom_point()\n\n\n\n\n\n\n\n\nDiesem Scatterplot können wir noch mehr Informationsgehalt verleihen, indem wir mehr Argumente hinzufügen. Beispielsweise wäre es interessant zu wissen, ob die verschiedenen Spezies unterschiedlich lange und breite Blütenblätter haben. Das können wir herausfinden, indem wir die Punkte, die die gleiche Spezies aufweisen auch mit der gleichen Farbe versehen. Wir fügen also wieder unseren aesthetics-Befehl ein, indem wir die Farbe der Punkte die Variable species zuweisen.\n\nggplot(iris, aes(x = Sepal.Length, y = Petal.Width)) +\n  geom_point(aes(color = Species))\n\n\n\n\n\n\n\n\nAha! Es ist nun ganz deutlich zu erkennen, dass die unterschiedlichen Spezies auch unterschiedlich lange und breite Blütenblätter haben. Dies können wir noch deutlicher hervorheben, wenn wir für jede Spezies auch eine andere Form wählen.\n\nggplot(iris, aes(x = Sepal.Length, y = Petal.Width)) +\n  geom_point(aes(color = Species, \n                 shape = Species))\n\n\n\n\n\n\n\n\nDie Verteilung der Werte im Scatterplot legt nahe, dass ein Blütenblatt, dass ein kurzes Blütenblatt hat eher schmal ist und ein längeres Blütenblatt entsprechend breiter. Diese lineare Beziehung kann noch verdeutlicht werden, indem man eine Gerade über die Punktewolke legt, die dem generellen Trend folgt. Dazu fügt man noch die Funktion geom_smooth hinzu und spezifiziert mit method = lm, dass wir eine Gerade möchten.\n\nggplot(iris, aes(x = Sepal.Length, y = Petal.Width)) +\n  geom_point(aes(color = Species, \n                 shape = Species)) +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n9.4.4 Boxplots\nDen Fakt, dass die unterschiedlichen Spezies unterschiedlich große Blüten haben, können wir noch deutlicher visualisieren, indem wir Boxplots erstellen. Hier legen wir den geomtyp auf geom_boxplot fest und geben an, dass die Füllung sich an den Spezies orientieren soll.\n\nggplot(iris, aes(x = Species, y = Sepal.Length)) +\n  geom_boxplot(aes(fill = Species))",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes</span>"
    ]
  },
  {
    "objectID": "QM1_Tutorium_Fallstudie_IRIS.html#daten-umformen",
    "href": "QM1_Tutorium_Fallstudie_IRIS.html#daten-umformen",
    "title": "9  Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes",
    "section": "9.5 Daten umformen",
    "text": "9.5 Daten umformen\nMit den verschiedenen Plots konnten wir uns bis jetzt einen ganz guten Überblick über die Daten verschaffen. Nun widmen wir uns wieder den Daten und versuchen die weiterhin etwas zu optimieren.\nBei Betrachtung einiger Plots kann man bereits erkennen, dass es in dem Datensatz vereinzelt Extremwerte bei den einzelnen Variablen gibt, die das Gesamtbild verfälschen.\nDiese Extremwerte wollen wir nun ausmachen und aus dem Datensatz entfernen.\n\n9.5.1 Die Boxplot Methode\nGängig ist es, dass man Extremwerte mit der Boxplot Methode ausmacht. Diese besagt, dass jeder Wert der über dem Ergebnis der Formel:\n75 Quantile + 1.5 * IQR | 25 Quantile - 1.5 * IQR\nliegt als Extremwert zu sehen ist. Wir werden hier diese Grenzwerte mal für die Variable Sepal.Width bestimmen:\nBestimmung des 75 Quantils und des 25 Quantils :\n\niris %&gt;% \n  summarise(q75 = quantile(Sepal.Width,\n                         prob = .75,\n                         na.rm = TRUE),\n            q25 = quantile(Sepal.Width,\n                         prob = .25,\n                         na.rm = TRUE))\n\n\n  \n\n\n\nBestimmung des IQRs:\n\niris %&gt;% \n  summarise(IQR_SW = IQR(Sepal.Width))\n\n\n  \n\n\n\nEinsetzen in die Formel:\n\nGrenzwerte = c(3.3  + 1.5 * 0.5, 2.8 - 1.5 * 0.5)\n\nJeder Wert der Variable Sepal.Width, der größer als 4.05 oder kleiner als 2.05 ist, kann also als Extremwert betrachtet werden.\nSchauen wir mal, wie viele es davon gibt:\n\niris %&gt;% \n  count(Sepal.Width &gt; 4.05 | Sepal.Width &lt; 2.05)\n\n\n  \n\n\n\nJetzt wissen wir, dass es vier Extremwerte gibt.\n\n\n9.5.2 Boxplot erstellen\nDiese können wir uns auch anhand eines Boxplots anzeigen lassen. Das ist immer praktisch, um überhaupt erst einmal zu überprüfen, ob es denn Extremwerte für eine Variable gibt.\n\nggplot(iris, aes(Sepal.Width)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nGenerell ist es zum Überprüfen auf Extremwerte auch hilfreich, zunächst einmal Boxplots zu erstellen.\n\n\n9.5.3 Extremwerte in NA´s umwandeln\nImmerhin 3 Extremwerte haben wir also. Diese löschen wir nun aus dem Datensatz, indem wir sie in NA´s umwandeln.\nDies ist mit diesen Befehlen möglich:\n\niris.we &lt;- \n  iris %&gt;%\n  mutate(Sepal.Width.we = replace(.$Sepal.Width, .$Sepal.Width &gt; 4.05 | .$Sepal.Width &lt; 2.05,\n  NA)) \n\nMit dem Befehl Mutate haben wir hier eine neue Spalte Sepal.Width.we erschaffen, die alle Daten von Sepal.Width außer die Extremwerte enthält.\nMit den Werten aus dieser Spalte können wir dann ganz normal arbeiten wie mit den anderen vorher auch.\nUm zu überprüfen, ob alles funktioniert hat, checken wir nochmal, wie viele fehlende Werte es jetzt in dem neuen Datensatz gibt und ob es Werte über dem mit der Boxplot Methode gewählten Grenzwert gibt.\n\n# Fehlende Werte?\niris.we %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\n\n# Werte über dem Grenzwert? \niris.we %&gt;% \n  count(Sepal.Width.we &gt; 4.05 | Sepal.Width.we &lt; 2.05)\n\n\n  \n\n\n\nWir sehen, dass alles funktioniert hat. In dem neuen Datensatz gibt es keine Werte mehr für die Variable, die wir vorher mit der Boxplot Methode als Extremwerte definiert haben.",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes</span>"
    ]
  },
  {
    "objectID": "QM1_Tutorium_Fallstudie_IRIS.html#abschluss",
    "href": "QM1_Tutorium_Fallstudie_IRIS.html#abschluss",
    "title": "9  Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes",
    "section": "9.6 Abschluss",
    "text": "9.6 Abschluss\nNun haben wir einen ganz guten Eindruck vom iris-Datensatz bekommen und bereits erste Optimierungen am Datensatz vorgenommen. Einer weiteren Analyse steht nichts mehr im Weg.",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Fallstudie zur explorativen Datenanalyse anhand des Iris-Datensatzes</span>"
    ]
  },
  {
    "objectID": "Iris_eda_teil2.html",
    "href": "Iris_eda_teil2.html",
    "title": "10  Fallstudie EDA Iris Teil 2",
    "section": "",
    "text": "10.1 Pakete laden\nlibrary(tidyverse)\nlibrary(ggcorrplot)\nlibrary(corrr)\nlibrary(fastDummies)",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Fallstudie EDA Iris Teil 2</span>"
    ]
  },
  {
    "objectID": "Iris_eda_teil2.html#fehlende-werte",
    "href": "Iris_eda_teil2.html#fehlende-werte",
    "title": "10  Fallstudie EDA Iris Teil 2",
    "section": "10.2 Fehlende Werte",
    "text": "10.2 Fehlende Werte\n\n10.2.1 Definition\nOb aufgrund von technischen Problemen, Messfehlern oder Nachlässigkeit beim Eintragen, fehlende Werte können grundsätzlich in jedem Datensatz vorkommen. Wendet man Befehle wie summarise() auf Spalten mit NAs an, kann der Befehl nicht ausgeführt werden. Deshalb sieht man oft am Ende von Code-Chunks so etwas wie drop_na(), was dazu dient, alle Zeilen, die NAs enthalten, für die Operation rauszuschmeißen. Das ist aber keine endgültige Lösung, denn NAs können die Aussagekraft des Datensatzes stark beeinträchtigen.\n\n\n10.2.2 Auf fehlende Werte prüfen\nIm ersten Teil der EDA haben wir ja die Extremwerte bestimmt und in NA umgewandelt:\n\niris %&gt;% \n  summarise(q75 = quantile(Sepal.Width,\n                         prob = .75,\n                         na.rm = TRUE),\n            q25 = quantile(Sepal.Width,\n                         prob = .25,\n                         na.rm = TRUE))\n\n\n  \n\n\niris %&gt;% \n  summarise(IQR_SW = IQR(Sepal.Width))\n\n\n  \n\n\nGrenzwerte = c(3.3  + 1.5 * 0.5, 2.8 - 1.5 * 0.5)\n\niris.we &lt;- \n  iris %&gt;%\n  mutate(Sepal.Width.we = replace(.$Sepal.Width, .$Sepal.Width &gt; 4.05 | .$Sepal.Width &lt; 2.05,\n  NA)) \n\nJetzt prüfen wir nochmal auf NAs und sehen, dass die vier Extremwerte jetzt NAs sind:\n\niris.we %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\n\n\n10.2.3 Umgang mit fehlenden Werten\nAber wie geht man dann mit NAs um? Wenn es nicht viele Zeilen betrifft, kann man überlegen, die Zeilen, die NAs enthalten, mit drop_na() einfach zu entfernen. Wenn jedoch ein erheblicher Anteil der Zeilen betroffen sein sollte, dann wäre das Entfernen ein fataler Fehler, da dies zu einem riesigen Informationsverlust führen würde. Um das zu vermeiden, kann man alle NAs stattdessen mit einem mehr oder weniger repräsentativen Wert wie dem Mittelwert, Median oder dem Modus der entsprechenden Spalte ersetzen. Das macht unseren Datensatz zwar nicht viel aussagekräftiger, aber es ist allemal besser, als ganze Zeilen zu verlieren.\nUnsere NAs ersetzen wir nun mit dem Mittelwert:\n\niris.we &lt;- iris.we %&gt;%\n  replace_na(replace = list(Sepal.Width.we = mean(.$Sepal.Width.we, na.rm = TRUE)))\n\nGucken wir noch ein letztes Mal:\n\niris.we %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\nSuper, hat ja astrein funktioniert!",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Fallstudie EDA Iris Teil 2</span>"
    ]
  },
  {
    "objectID": "Iris_eda_teil2.html#korrelation",
    "href": "Iris_eda_teil2.html#korrelation",
    "title": "10  Fallstudie EDA Iris Teil 2",
    "section": "10.3 Korrelation",
    "text": "10.3 Korrelation\n\n10.3.1 Definition\nDer Korrelationskoeffizient, auch Produkt-Moment-Korrelation,[1] ist ein Maß für den Grad des linearen Zusammenhangs zwischen zwei mindestens intervallskalierten Merkmalen, das nicht von den Maßeinheiten der Messung abhängt und somit dimensionslos ist. Er kann Werte zwischen -1 und +1annehmen. Bei einem Wert von +1 (bzw. -1) besteht ein vollständig positiver (bzw. negativer) linearer Zusammenhang zwischen den betrachteten Merkmalen. Wenn der Korrelationskoeffizient den Wert 0 aufweist, hängen die beiden Merkmale überhaupt nicht linear voneinander ab\nSind zwei Merkmale vollständig miteinander korreliert (d. h.|r|=1), so liegen alle Messwerte in einem 2-dimensionalen Koordinatensystem auf einer Geraden. Bei einer perfekten positiven Korrelation (r=+1) steigt die Gerade. Wenn die Merkmale perfekt negativ miteinander korreliert sind (r=-1), sinkt die Gerade. Besteht zwischen zwei Merkmalen eine sehr hohe Korrelation, sagt man oft auch, sie erklären dasselbe.\nJe näher der Betrag von r bei 0 liegt, desto kleiner der lineare Zusammenhang. Für r = 0 kann der statistische Zusammenhang zwischen den Messwerten nicht mehr durch eine eindeutig steigende oder sinkende Gerade dargestellt werden. Dies ist z. B. der Fall, wenn die Messwerte rotationssymmetrisch um den Mittelpunkt verteilt sind. Dennoch kann dann ein nichtlinearer statistischer Zusammenhang zwischen den Merkmalen gegeben sein. Umgekehrt gilt jedoch: Wenn die Merkmale statistisch unabhängig sind, nimmt der Korrelationskoeffizient stets den Wert 0 an.\n\n\n\nHier ein paar Scatterplots zur Verdeutlichung\n\n\n\n\n10.3.2 Korrelationsmatrix\nDie Korrelationsmatrix gibt uns einen Überblick über alle Korrelationen unter den Variablen. Hier ist zu beachten, dass die Korrelation nur für numerische Variablen berechnet werden kann. Wenn wir uns gezielt anschauen möchten, welche Variablen mit einer bestimmten AV korrelieren, geht das folgendermaßen:\n\niris %&gt;% \n  select(where(is.numeric)) %&gt;%  # alle metrischen Variablen, aber sonst keine\n  correlate() %&gt;%   # korreliere, was du hast\n  focus(Sepal.Length) %&gt;%  # beschränke (fokussiere) dich auf `dep_delay`\n  arrange(-Sepal.Length)\n\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n\n\n\n  \n\n\n\n\n\n10.3.3 Korrelationsplot\nEin Korrelationsplot stellt die Korrelationen nochmal übersichtlicher dar.\n\niris %&gt;% \n  select(where(is.numeric)) %&gt;% \n  cor() %&gt;% \n  ggcorrplot(method = \"circle\", \n             type = \"lower\",\n             colors = c(\"violet\", \"grey\", \"blue\"))",
    "crumbs": [
      "Fallstudien EDA",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Fallstudie EDA Iris Teil 2</span>"
    ]
  },
  {
    "objectID": "iris_lm.html",
    "href": "iris_lm.html",
    "title": "11  Fallstudie Vorhersagemodellierung Iris",
    "section": "",
    "text": "11.1 Was ist ein lineares Modell?\nJetzt, da wir unsere Daten in der EDA aufbereitet und Anomalien beseitigt haben, können wir uns an einer Vorhersage versuchen. Hierzu bedienen wir uns an einem linearen Modell, das heißt, wir legen eine Gerade über die Punktewolke unserer AV und versuchen, die Abstände von den Punkten, also den echten Werten zu der Gerade, welche die vorhergesagten Werte darstellt, zu minimieren. Um ein lineares Modell zu erstellen, benutzen wir einfach den Befehl lm().\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(ggcorrplot)\ndata(iris)\n#Aufteilen der Daten in train und test sample, Erstellen einer ID-Spalte (Für die Klausur irrelevant:)\niris &lt;- iris %&gt;% \n  mutate(id = row_number()) %&gt;% \n  select(id, everything())\nset.seed(123)\ntrain_test_split &lt;- initial_split(iris, prop = 0.7)\niris_train &lt;- training(train_test_split)\niris_test &lt;- testing(train_test_split)",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Fallstudie Vorhersagemodellierung Iris</span>"
    ]
  },
  {
    "objectID": "iris_lm.html#erstellen-eines-einfachen-linearen-modells",
    "href": "iris_lm.html#erstellen-eines-einfachen-linearen-modells",
    "title": "11  Fallstudie Vorhersagemodellierung Iris",
    "section": "11.2 Erstellen eines einfachen linearen Modells",
    "text": "11.2 Erstellen eines einfachen linearen Modells\n\n11.2.1 Variablenauswahl\nWenn wir jetzt im Iris Datensatz Sepal.Length vorhersagen wollen, müssen wir zuerst überlegen, welche Variablen uns dabei als Prädiktoren dienen könnten. Ein Anhaltspunkt ist der Korrelationsplot, den wir im letzten Kapitel erstellt haben.\n\niris_train %&gt;% \n  select(where(is.numeric)) %&gt;% \n  cor() %&gt;% \n  ggcorrplot(method = \"circle\", \n             type = \"lower\",\n             colors = c(\"violet\", \"grey\", \"blue\"))\n\n\n\n\n\n\n\n\nHier können wir deutlich sehen, dass sowohl Petal.Length als auch Petal.Width, einen starken Zusammenhang mit Sepal.Length aufweisen. Anders gesagt: Je länger und breiter das Kelchblatt einer Blüte ist, desto länger ist das Blütenblatt.\n\n\n11.2.2 Erstellen des Modells\nDer Einfachheit halber nehmen wir erstmal nur einen Prädiktor, nämlich Sepal.Length:\n\nlm1 &lt;- lm(Sepal.Length ~ Petal.Length, \n   data = iris_train)\n\nMit nur einem Prädiktor lässt sich das Modell auch noch leicht visualisieren:\n\nggplot(iris_train, aes(x = Petal.Length, y = Sepal.Length)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n11.2.3 Ausgeben der Metrics\nWenn wir jetzt wissen wollen, wie gut unser Modell ist, können wir uns mit summary()eine Zusammenfassung aller Kennwerte des Modells ausgeben lassen:\n\nsummary(lm1)\n\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Length, data = iris_train)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.25703 -0.31710 -0.03212  0.24553  1.04518 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   4.24492    0.09642   44.02   &lt;2e-16 ***\nPetal.Length  0.42491    0.02314   18.36   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4247 on 103 degrees of freedom\nMultiple R-squared:  0.7661,    Adjusted R-squared:  0.7638 \nF-statistic: 337.3 on 1 and 103 DF,  p-value: &lt; 2.2e-16\n\n\nFürs Erste schauen wir uns nur den Wert für das Adjusted R-squared an. Dieser sagt uns, dass rund 76% der Varianz von Petal.Length durch Sepal.Length erklärt werden kann. Zur Vertiefung von R2 ist folgendes Video gut geeignet:\nStatQuest: Linear Models",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Fallstudie Vorhersagemodellierung Iris</span>"
    ]
  },
  {
    "objectID": "iris_lm.html#erstellen-eines-modells-mit-mehreren-prädiktoren",
    "href": "iris_lm.html#erstellen-eines-modells-mit-mehreren-prädiktoren",
    "title": "11  Fallstudie Vorhersagemodellierung Iris",
    "section": "11.3 Erstellen eines Modells mit mehreren Prädiktoren",
    "text": "11.3 Erstellen eines Modells mit mehreren Prädiktoren\n\nlm2 &lt;- lm(Sepal.Length ~ Petal.Length + Petal.Width,\n          data = iris_train)\n\n\nsummary(lm2)\n\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Length + Petal.Width, data = iris_train)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.16585 -0.31081 -0.06377  0.27233  1.06452 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    4.0925     0.1150  35.596  &lt; 2e-16 ***\nPetal.Length   0.6126     0.0839   7.302 6.41e-11 ***\nPetal.Width   -0.4609     0.1983  -2.324   0.0221 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4159 on 102 degrees of freedom\nMultiple R-squared:  0.7778,    Adjusted R-squared:  0.7735 \nF-statistic: 178.5 on 2 and 102 DF,  p-value: &lt; 2.2e-16\n\n\nDas adj R2 ist nur minimal gestiegen. Zum Glück gibt es noch andere Methoden, um unsere Vorhersagegüte zu erhöhen. Im Folgenden werden wir auf eine kleine Auswahl dieser Methoden eingehen.",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Fallstudie Vorhersagemodellierung Iris</span>"
    ]
  },
  {
    "objectID": "iris_lm.html#methoden-zur-erhöhung-der-modellgüte",
    "href": "iris_lm.html#methoden-zur-erhöhung-der-modellgüte",
    "title": "11  Fallstudie Vorhersagemodellierung Iris",
    "section": "11.4 Methoden zur Erhöhung der Modellgüte",
    "text": "11.4 Methoden zur Erhöhung der Modellgüte\n\n11.4.1 Logarithmieren\nErkennt man bleim Plotten der Daten, dass sich ein Großteil dieser in einem kleinen Bereich befindet, so kann es durchaus Sinn ergeben, den Bereich genauer zu betrachten. Wir “strecken” also den Bereich, indem wir die Daten logarithmieren.\nZum Überprüfen, ob sich ein logarithmieren lohnt, kann man geom_point() und geom_histogram() benutzen. Erkennt man z.B. in einem Histogramm, dass eine Verteilung schief ist, so lohnt sich das Logarithmieren.\n\niris_train %&gt;% \n  select(where(is.numeric)) %&gt;% \n  select(-id) %&gt;% \n  pivot_longer(everything()) %&gt;% \n  ggplot(., aes(x = value)) +\n  geom_histogram() +\n  facet_wrap(~ name, scales = \"free_x\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nHier bietet sich das Logarithmieren nicht unbedingt an. Man könnte höchstens Petal.Width logarithmieren, wenn man das möchte. Das Logarithmieren geht so:\n\niris_train &lt;- iris_train %&gt;% \n  mutate(Petal.Width_log = log(Petal.Width))\n\nWarnung: Logarithmiert man die Zahl 0, so kommt -Inf heraus. Das ist keine Zahl und macht daher Probleme.\n\n\n11.4.2 Interaktionseffekt\nHängt die Steigung einer Regressionsgeraden ab von der Ausprägung eines anderen Prädiktors, so liegt ein Interaktionseffekt vor. Mit „abhängen” ist gemeint, dass die Veränderung in Y nicht gleich ist für alle Werte des Prädiktors X1, sondern sich je nach Wert eines anderen Prädiktors X2 unterscheidet. Um herauszufinden, ob zwischen Variablen ein Interaktionseffekt vorliegt, können wir folgenden Plot erstellen:\n\nggplot(iris_train, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nWenn wir uns diesen Plot ansehen, erkennen wir, dass der Effekt von Petal.Length (X1) auf Sepal.Length (Y) abhängig ist von der Blütenart (X2), also von Species. Eine Steigerung von Petal.Length der Spezies Setosa führt zu einer geringeren Steigerung von Sepal.Length als bei den anderen Spezies. Es liegt hier also ein Interaktionseffekt zwischen den Prädiktoren Sepal.Length und Species vor, da die Geraden je nach Ausprägung von Specieseine unterschiedliche Steigung haben.\nIm Modell bezieht man den Interaktionsefekt folgendermaßen mit ein:\n\nlm3 &lt;- lm(Sepal.Length ~ Petal.Length + Petal.Width + Petal.Length:Species,\n          data = iris_train)\nsummary(lm3)\n\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Length + Petal.Width + Petal.Length:Species, \n    data = iris_train)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.97281 -0.23124 -0.06142  0.22754  1.24191 \n\nCoefficients:\n                               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                      2.7675     0.3449   8.025 2.01e-12 ***\nPetal.Length                     1.5332     0.2315   6.622 1.79e-09 ***\nPetal.Width                     -0.2461     0.2053  -1.199 0.233416    \nPetal.Length:Speciesversicolor  -0.7122     0.1685  -4.226 5.25e-05 ***\nPetal.Length:Speciesvirginica   -0.7501     0.1885  -3.980 0.000131 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.3814 on 100 degrees of freedom\nMultiple R-squared:  0.8168,    Adjusted R-squared:  0.8095 \nF-statistic: 111.5 on 4 and 100 DF,  p-value: &lt; 2.2e-16\n\n\nWir sehen: Das Modell ist gleich deutlich besser als davor.",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Fallstudie Vorhersagemodellierung Iris</span>"
    ]
  },
  {
    "objectID": "iris_lm.html#vorhersage",
    "href": "iris_lm.html#vorhersage",
    "title": "11  Fallstudie Vorhersagemodellierung Iris",
    "section": "11.5 Vorhersage",
    "text": "11.5 Vorhersage\nNun erstellen wir mit dem Befehl predict() unsere Vorhersagen, also die Werte für Sepal.Length im Test-Datensatz und fügen sie als neue Spalte mit dem Namen preds hinzu. Wir predicten natürlich mit unserem besten Modell.\n\niris_test &lt;- iris_test %&gt;% \n  mutate(preds = predict(lm3, newdata = iris_test))\n\nSchließlich erstellen wir die wichtigste Datei für die Abgabe: Die csv-Datei, die neben den Vorhersagen auch die id-Spalte enthält, um die Vorhersagen den echten Werten zuordnen zu können.\n\nabgabe &lt;- iris_test %&gt;% \n  select(id, preds)\n\nwrite.csv(abgabe, file = \"abgabe.csv\", row.names = FALSE)",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Fallstudie Vorhersagemodellierung Iris</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Aufteilung.html",
    "href": "QM1_Tut_Aufteilung.html",
    "title": "12  Modellierung mit Aufteilung der Train-Daten",
    "section": "",
    "text": "12.1 Einleitung\nIm Folgenden wird die Vorhersagemodellierung noch einmal genauer behandelt. Um Overfitting zu vermeiden wird der Train-Datensatz aufgeteilt.",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Modellierung mit Aufteilung der Train-Daten</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Aufteilung.html#pakte-laden",
    "href": "QM1_Tut_Aufteilung.html#pakte-laden",
    "title": "12  Modellierung mit Aufteilung der Train-Daten",
    "section": "12.2 Pakte laden",
    "text": "12.2 Pakte laden\n\nlibrary(rbthemes)\nlibrary(tidymodels) #für Auteilung der Daten reicht es, das Paket rsample zu laden\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.5      ✔ recipes      1.0.10\n✔ dials        1.2.1      ✔ rsample      1.2.1 \n✔ dplyr        1.1.4      ✔ tibble       3.2.1 \n✔ ggplot2      3.5.1      ✔ tidyr        1.3.1 \n✔ infer        1.0.7      ✔ tune         1.2.1 \n✔ modeldata    1.3.0      ✔ workflows    1.1.4 \n✔ parsnip      1.2.1      ✔ workflowsets 1.1.0 \n✔ purrr        1.0.2      ✔ yardstick    1.3.1 \n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\n\n\nAttache Paket: 'palmerpenguins'\n\nDas folgende Objekt ist maskiert 'package:modeldata':\n\n    penguins\n\npenguins_data &lt;- penguins",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Modellierung mit Aufteilung der Train-Daten</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Aufteilung.html#daten-importieren-und-aufteilen",
    "href": "QM1_Tut_Aufteilung.html#daten-importieren-und-aufteilen",
    "title": "12  Modellierung mit Aufteilung der Train-Daten",
    "section": "12.3 Daten importieren und aufteilen",
    "text": "12.3 Daten importieren und aufteilen\nDie folgende Aufteilung wird im Vorhinein vom Dozenten vorgenommen. In der Prüfung bekommt ihr d_train und d_test als Resultat des folgenden Codes:\n\npenguins_data &lt;- penguins_data %&gt;% \n  drop_na() %&gt;% \n  mutate(id = row_number()) %&gt;% \n  select(id, everything())\n\nset.seed(123)\ntrain_test_split &lt;- initial_split(penguins_data, prop = 0.7)\nd_train &lt;- training(train_test_split)\nd_test &lt;- testing(train_test_split)\n\nHier wird die Aufteilung des Train-Samples vorgenommen. Auf d_train1 werden Modelle trainiert, um dann auf d_train_test angewandt zu werden. So kann man sicherstellen, dass das Modell nicht nur die Daten, die es kennt, gut vorhersagt, sondern auch unbekannte Daten. Es gilt zu beachten, dass am Ende ein Modell abgegeben werden sollte, das auf dem kompletten ursprünglichen Train-Sample trainiert wurde.\n\ndtrain_split &lt;- initial_split(d_train, prop = 0.8)\nd_train1 &lt;- training(dtrain_split)\nd_train_test &lt;- testing(dtrain_split)",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Modellierung mit Aufteilung der Train-Daten</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Aufteilung.html#eda",
    "href": "QM1_Tut_Aufteilung.html#eda",
    "title": "12  Modellierung mit Aufteilung der Train-Daten",
    "section": "12.4 EDA",
    "text": "12.4 EDA\n\nd_train %&gt;% \n  group_by(sex) %&gt;%\n  summarise(mean(body_mass_g))",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Modellierung mit Aufteilung der Train-Daten</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Aufteilung.html#vorhersagemodellierung",
    "href": "QM1_Tut_Aufteilung.html#vorhersagemodellierung",
    "title": "12  Modellierung mit Aufteilung der Train-Daten",
    "section": "12.5 Vorhersagemodellierung",
    "text": "12.5 Vorhersagemodellierung\n\nlm1 &lt;- lm(body_mass_g ~ I(bill_depth_mm^2) + species + flipper_length_mm\n         + bill_length_mm + sex, data = d_train1)\nsummary(lm1)\n\n\nCall:\nlm(formula = body_mass_g ~ I(bill_depth_mm^2) + species + flipper_length_mm + \n    bill_length_mm + sex, data = d_train1)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-783.22 -171.88  -31.76  180.76  726.45 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)        -617.0111   710.7614  -0.868 0.386503    \nI(bill_depth_mm^2)    1.8207     0.7431   2.450 0.015245 *  \nspeciesChinstrap   -351.9506   114.5383  -3.073 0.002452 ** \nspeciesGentoo       968.2548   167.9924   5.764 3.54e-08 ***\nflipper_length_mm    13.2436     3.8255   3.462 0.000671 ***\nbill_length_mm       26.2270    10.4342   2.514 0.012834 *  \nsexmale             395.7132    66.2268   5.975 1.21e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 292.3 on 179 degrees of freedom\nMultiple R-squared:  0.8696,    Adjusted R-squared:  0.8652 \nF-statistic: 198.9 on 6 and 179 DF,  p-value: &lt; 2.2e-16\n\n\n\nlm2 &lt;- lm(body_mass_g ~ flipper_length_mm + bill_depth_mm + bill_length_mm + sex, data = d_train1)\nsummary(lm2)\n\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm + bill_depth_mm + \n    bill_length_mm + sex, data = d_train1)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-921.34 -262.15    0.28  253.06  926.54 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       -1543.865    883.423  -1.748   0.0822 .  \nflipper_length_mm    36.896      3.440  10.726  &lt; 2e-16 ***\nbill_depth_mm       -95.565     22.281  -4.289 2.91e-05 ***\nbill_length_mm       -7.090      7.042  -1.007   0.3154    \nsexmale             585.857     74.296   7.885 2.85e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 358.6 on 181 degrees of freedom\nMultiple R-squared:  0.8015,    Adjusted R-squared:  0.7972 \nF-statistic: 182.8 on 4 and 181 DF,  p-value: &lt; 2.2e-16\n\n\n\nd_train1 &lt;- d_train1 %&gt;%\n  mutate(pred = predict(lm1, newdata = d_train1))\n\n\nggplot(data = d_train1, aes(x = flipper_length_mm, y = body_mass_g, color = sex)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  theme_pastel\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data = d_train1, aes(x = flipper_length_mm, y = pred)) +\n  geom_point(aes(color = sex, shape = species)) +\n  theme_pastel\n\n\n\n\n\n\n\n\n\nggplot(data = d_train1, aes(x = body_mass_g, fill = sex)) +\n  geom_histogram() +\n  theme_pastel\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nggplot(data = d_train1, aes(x = pred, fill=sex)) +\n  geom_histogram() +\n  theme_pastel\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nZur Berechnung des RMSE kann auch die Funktion rmse() aus dem Paket performance verwendet werden. Hier wird manuell die Formel angewandt.\n\nsqrt(mean((d_train1$pred - d_train$body_mass_g)^2))\n\nWarning in d_train1$pred - d_train$body_mass_g: Länge des längeren Objektes\n     ist kein Vielfaches der Länge des kürzeren Objektes\n\n\n[1] 1106.365\n\n\nTesten der Vorhersagegüte im eigenen Test-Sample:\n\nd_train_test &lt;- d_train_test %&gt;%\n  mutate(pred = predict(lm1, newdata = d_train_test))\n\nsqrt(mean((d_train_test$pred - d_train_test$body_mass_g)^2))\n\n[1] 232.8436\n\n\nFür die eigene Abgabe trainieren wir unser bestes Modell noch einmal auf dem ganzen Train-Datensatz:\n\nlm1 &lt;- lm(body_mass_g ~ I(bill_depth_mm^2) + species \n         + flipper_length_mm\n         + bill_length_mm + sex, data = d_train)\nsummary(lm1)\n\n\nCall:\nlm(formula = body_mass_g ~ I(bill_depth_mm^2) + species + flipper_length_mm + \n    bill_length_mm + sex, data = d_train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-811.87 -155.90  -24.31  162.38  912.30 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)        -938.6799   604.1940  -1.554 0.121677    \nI(bill_depth_mm^2)    2.0075     0.6394   3.140 0.001917 ** \nspeciesChinstrap   -322.7564    92.4227  -3.492 0.000576 ***\nspeciesGentoo       968.6972   141.3086   6.855 6.71e-11 ***\nflipper_length_mm    14.6584     3.3034   4.437 1.42e-05 ***\nbill_length_mm       25.6652     8.4080   3.052 0.002541 ** \nsexmale             391.6317    56.1159   6.979 3.26e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 280.4 on 226 degrees of freedom\nMultiple R-squared:  0.883, Adjusted R-squared:  0.8799 \nF-statistic: 284.2 on 6 and 226 DF,  p-value: &lt; 2.2e-16\n\n\nBerechnung der Note (für euch in der Klausur nicht möglich):\n\nd_test &lt;- d_test %&gt;%\n  mutate(preds = predict(lm1, newdata = d_test))\n\nsqrt(mean((d_test$preds - d_test$body_mass_g)^2))\n\n[1] 308.0294\n\n\nErstellung der Abgabe-Csv:\n\nabgabe &lt;- d_test %&gt;% \n  select(id, preds)\nwrite_csv(abgabe, \"abgabe_notebook.csv\")",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Modellierung mit Aufteilung der Train-Daten</span>"
    ]
  },
  {
    "objectID": "Probeklausur.html",
    "href": "Probeklausur.html",
    "title": "13  Probeklausur Lösungsansatz",
    "section": "",
    "text": "13.1 Pakete und Datenladen\nlibrary(tidyverse)\nlibrary(corrr)\nlibrary(fastDummies)\nlibrary(corrplot)\nlibrary(Metrics)\nlibrary(readr)\nd_train &lt;- read_csv(\"d_train.csv\")\n\nRows: 205 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (6): ID, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nd_test &lt;- read_csv(\"d_test.csv\")\n\nRows: 134 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (5): ID, bill_length_mm, bill_depth_mm, flipper_length_mm, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nView(d_train)",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Probeklausur Lösungsansatz</span>"
    ]
  },
  {
    "objectID": "Probeklausur.html#datenjudo",
    "href": "Probeklausur.html#datenjudo",
    "title": "13  Probeklausur Lösungsansatz",
    "section": "13.2 Datenjudo",
    "text": "13.2 Datenjudo\n\nd_train %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\n\nd_train %&gt;% \n  select(body_mass_g) %&gt;% \n  summarise(preis_avg=mean(body_mass_g),\n            preis_md = median(body_mass_g),\n            preis_sd = sd(body_mass_g),\n            preis_iqr = IQR(body_mass_g))\n\n\n  \n\n\n\n\nggplot(d_train, aes(x=body_mass_g))+\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(d_train, aes(x=body_mass_g))+\n  geom_density()\n\n\n\n\n\n\n\n\n\nggplot(data = d_train)+\n  geom_point(mapping = aes(x = body_mass_g, y = bill_length_mm))+\n  geom_smooth(mapping = aes(x = body_mass_g, y = bill_length_mm))\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nggplot(data = d_train)+\n  geom_point(mapping = aes(x = body_mass_g, y = bill_depth_mm))+\n  geom_smooth(mapping = aes(x = body_mass_g, y = bill_depth_mm))\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nggplot(data = d_train)+\n  geom_point(mapping = aes(x = body_mass_g, y = flipper_length_mm))+\n  geom_smooth(mapping = aes(x = body_mass_g, y = flipper_length_mm))\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nd_train %&gt;% \n  mutate(across(where(is.integer), as.numeric)) %&gt;% \n  select(where(is.numeric)) %&gt;% \n  pivot_longer(everything(), names_to = \"variable\") %&gt;% \n  ggplot(aes(x = value)) +\n  geom_histogram() +\n  facet_wrap(~ variable, scales = \"free\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\nd_train %&gt;% \n  sapply(class)\n\n               ID           species            island    bill_length_mm \n        \"numeric\"       \"character\"       \"character\"         \"numeric\" \n    bill_depth_mm flipper_length_mm       body_mass_g               sex \n        \"numeric\"         \"numeric\"         \"numeric\"       \"character\" \n             year \n        \"numeric\" \n\n\n\nvisdat::vis_dat(d_train)\n\n\n\n\n\n\n\n\n\nd_train %&gt;% \n  select(where(is.numeric)) %&gt;% \n  summarise(across(\n    .cols = everything(),\n    .fns = ~cor(.,d_train$body_mass_g, use = \"complete.obs\")\n  )) %&gt;% \n  pivot_longer(everything()) %&gt;% \n  arrange(-abs(value))\n\n\n  \n\n\n\n\nd_train %&gt;% \n  summarise(q75=quantile(body_mass_g,\n                         prob = .75,\n                         na.rm = TRUE),\n            q25=quantile(body_mass_g,\n                         prob = .25,\n                         na.rm = TRUE))\n\n\n  \n\n\n\n\nd_train %&gt;%\n  summarise(body_mass_g_iqr = IQR(body_mass_g,na.rm = TRUE))\n\n\n  \n\n\n\n\nbody_mass_g_grenzwerte &lt;- c(4750 + 1.5 * 1200, 3550 - 1.5 * 1200)\n\n\nd_train %&gt;% \n  summarise(q75=quantile(bill_length_mm,\n                         prob = .75,\n                         na.rm = TRUE),\n            q25=quantile(bill_length_mm,\n                         prob = .25,\n                         na.rm = TRUE))\n\n\n  \n\n\n\n\nd_train %&gt;%\n  summarise(bill_length_mm_iqr = IQR(bill_length_mm,na.rm = TRUE))\n\n\n  \n\n\n\n\nbill_length_mm_grenzwerte &lt;- c(48.775 + 1.5 * 9.1, 39.675 - 1.5 * 9.1)\n\n\nd_train %&gt;% \n  summarise(q75=quantile(bill_depth_mm,\n                         prob = .75,\n                         na.rm = TRUE),\n            q25=quantile(bill_depth_mm,\n                         prob = .25,\n                         na.rm = TRUE))\n\n\n  \n\n\n\n\nd_train %&gt;%\n  summarise(bill_depth_mm_iqr = IQR(bill_depth_mm,na.rm = TRUE))\n\n\n  \n\n\n\n\nbill_depth_mm_grenzwerte &lt;- c(18.8 + 1.5 * 3.5, 15.3 - 1.5 * 3.5)\n\n\nd_train %&gt;% \n  summarise(q75=quantile(flipper_length_mm,\n                         prob = .75,\n                         na.rm = TRUE),\n            q25=quantile(flipper_length_mm,\n                         prob = .25,\n                         na.rm = TRUE))\n\n\n  \n\n\n\n\nd_train %&gt;%\n  summarise(flipper_length_mm_iqr = IQR(flipper_length_mm,na.rm = TRUE))\n\n\n  \n\n\n\n\nflipper_length_mm_grenzwerte &lt;- c(214 + 1.5 * 24, 190 - 1.5 * 24)\n\n\nd_train %&gt;%\n  count(bill_depth_mm &gt; 24.1)\n\n\n  \n\n\n\n\nd_train %&gt;%\n  count(bill_depth_mm &lt; 10.1)\n\n\n  \n\n\n\n\nd_train %&gt;%\n  count(bill_length_mm &gt; 62.4)\n\n\n  \n\n\n\n\nd_train %&gt;%\n  count(bill_length_mm &lt; 26)\n\n\n  \n\n\n\n\nd_train %&gt;%\n  count(body_mass_g &gt; 6550)\n\n\n  \n\n\n\n\nd_train %&gt;%\n  count(body_mass_g &lt; 1750)\n\n\n  \n\n\n\n\nd_train %&gt;%\n  count(flipper_length_mm &gt; 250)\n\n\n  \n\n\n\n\nd_train %&gt;%\n  count(flipper_length_mm &lt; 154)\n\n\n  \n\n\n\n\nd_train %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\n\nd_train_ohneNA &lt;- d_train %&gt;%\n  replace_na(replace = list(bill_length_mm = mean(.$bill_length_mm, na.rm = TRUE))) %&gt;%\n  replace_na(replace = list(bill_depth_mm = mean(.$bill_depth_mm, na.rm = TRUE)))\n\n\nd_train_ohneNA &lt;- d_train_ohneNA %&gt;%\n  replace_na(list(flipper_length_mm = 0))\n\n\nd_train_ohneNA %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\n\nd_train %&gt;% \n  ggplot() +\n  aes(x = body_mass_g, y = bill_length_mm) +\n  geom_boxplot()\n\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nd_train %&gt;% \n  ggplot() +\n  aes(x = body_mass_g, y = bill_depth_mm) +\n  geom_boxplot()\n\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nd_train %&gt;% \n  ggplot() +\n  aes(x = body_mass_g, y = flipper_length_mm) +\n  geom_boxplot()\n\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nd_train %&gt;% \n  ggplot() +\n  aes(x = body_mass_g, y = bill_length_mm) +\n  geom_point()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nd_train %&gt;% \n  ggplot() +\n  aes(x = body_mass_g, y = bill_depth_mm) +\n  geom_point()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nd_train %&gt;% \n  ggplot() +\n  aes(x = body_mass_g, y = flipper_length_mm) +\n  geom_point()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nsubset_cor &lt;- subset(d_train_ohneNA, select = c(body_mass_g,bill_depth_mm, flipper_length_mm, bill_length_mm ))\n\n\nKorr_tab &lt;- cor(subset_cor)\n\nKorr_tab\n\n                  body_mass_g bill_depth_mm flipper_length_mm bill_length_mm\nbody_mass_g         1.0000000    -0.4756584         0.6163949      0.5809113\nbill_depth_mm      -0.4756584     1.0000000        -0.3880401     -0.2149026\nflipper_length_mm   0.6163949    -0.3880401         1.0000000      0.4525609\nbill_length_mm      0.5809113    -0.2149026         0.4525609      1.0000000\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(species = factor(species)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= bill_depth_mm, color = species))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(species = factor(species)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= flipper_length_mm, color = species))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(species = factor(species)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= bill_length_mm, color = species))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(island = factor(island)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= bill_depth_mm, color = island))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(island = factor(island)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= flipper_length_mm, color = island))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(species = factor(island)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= bill_length_mm, color = island))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(sex = factor(sex)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= bill_depth_mm, color = sex))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(sex = factor(sex)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= flipper_length_mm, color = sex))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nd_train_ohneNA %&gt;% \n  mutate(sex = factor(sex)) %&gt;% \n  ggplot(aes(x= body_mass_g, y= bill_length_mm, color = sex))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Probeklausur Lösungsansatz</span>"
    ]
  },
  {
    "objectID": "Probeklausur.html#modellierung",
    "href": "Probeklausur.html#modellierung",
    "title": "13  Probeklausur Lösungsansatz",
    "section": "13.3 Modellierung",
    "text": "13.3 Modellierung\n\nlm1_all_in &lt;- lm(body_mass_g~., data = d_train_ohneNA)\nsummary(lm1_all_in)\n\n\nCall:\nlm(formula = body_mass_g ~ ., data = d_train_ohneNA)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-497.76 -135.02   -6.11  134.88  666.28 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       215677.757  37545.724   5.744 3.66e-08 ***\nID                     7.420      0.540  13.740  &lt; 2e-16 ***\nspeciesChinstrap    -442.933     82.669  -5.358 2.44e-07 ***\nspeciesGentoo         99.016    130.592   0.758  0.44927    \nislandDream          -93.871     55.434  -1.693  0.09204 .  \nislandTorgersen      -66.964     56.482  -1.186  0.23728    \nbill_length_mm        17.172      6.678   2.571  0.01090 *  \nbill_depth_mm         26.326     17.634   1.493  0.13714    \nflipper_length_mm     12.755      2.767   4.610 7.41e-06 ***\nsexmale              148.302     46.653   3.179  0.00173 ** \nyear                -107.561     18.734  -5.741 3.71e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 196.5 on 188 degrees of freedom\n  (6 Beobachtungen als fehlend gelöscht)\nMultiple R-squared:  0.9418,    Adjusted R-squared:  0.9388 \nF-statistic: 304.5 on 10 and 188 DF,  p-value: &lt; 2.2e-16\n\n\n\nsqrt(mean(lm1_all_in$residuals^2))\n\n[1] 190.9789\n\n\n\nlm2 &lt;- lm(body_mass_g~species + flipper_length_mm + sex + year, data = d_train_ohneNA )\nsummary(lm2)\n\n\nCall:\nlm(formula = body_mass_g ~ species + flipper_length_mm + sex + \n    year, data = d_train_ohneNA)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-702.3 -192.9  -11.0  204.2  816.0 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       106966.975  52276.996   2.046   0.0421 *  \nspeciesChinstrap    -146.330     56.977  -2.568   0.0110 *  \nspeciesGentoo        710.509    107.102   6.634 3.21e-10 ***\nflipper_length_mm     24.205      3.699   6.544 5.26e-10 ***\nsexmale              464.397     49.007   9.476  &lt; 2e-16 ***\nyear                 -53.837     26.126  -2.061   0.0407 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 286.2 on 193 degrees of freedom\n  (6 Beobachtungen als fehlend gelöscht)\nMultiple R-squared:  0.8733,    Adjusted R-squared:  0.8701 \nF-statistic: 266.2 on 5 and 193 DF,  p-value: &lt; 2.2e-16\n\n\n\nsqrt(mean(lm2$residuals^2))\n\n[1] 281.842\n\n\n\nlm3 &lt;- lm(body_mass_g~ flipper_length_mm:species + island:bill_depth_mm + island:bill_length_mm + bill_length_mm:sex +species + flipper_length_mm + sex + year, data = d_train_ohneNA)\nsummary(lm3)\n\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm:species + island:bill_depth_mm + \n    island:bill_length_mm + bill_length_mm:sex + species + flipper_length_mm + \n    sex + year, data = d_train_ohneNA)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-743.12 -165.80    2.24  175.77  780.22 \n\nCoefficients:\n                                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                        102598.089  52605.576   1.950 0.052656 .  \nspeciesChinstrap                      108.852   1545.407   0.070 0.943923    \nspeciesGentoo                        -469.020   1577.469  -0.297 0.766554    \nflipper_length_mm                      19.432      5.302   3.665 0.000323 ***\nsexmale                               872.246    402.545   2.167 0.031533 *  \nyear                                  -52.273     26.277  -1.989 0.048154 *  \nflipper_length_mm:speciesChinstrap     -1.489      7.993  -0.186 0.852426    \nflipper_length_mm:speciesGentoo         4.933      7.656   0.644 0.520220    \nislandBiscoe:bill_depth_mm             39.366     32.310   1.218 0.224628    \nislandDream:bill_depth_mm              85.184     34.480   2.471 0.014400 *  \nislandTorgersen:bill_depth_mm          45.005     34.797   1.293 0.197508    \nislandBiscoe:bill_length_mm            39.792     12.993   3.062 0.002524 ** \nislandDream:bill_length_mm             15.422     16.737   0.921 0.358039    \nislandTorgersen:bill_length_mm         33.962     16.578   2.049 0.041922 *  \nbill_length_mm:sexmale                -12.705      9.080  -1.399 0.163459    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 277 on 184 degrees of freedom\n  (6 Beobachtungen als fehlend gelöscht)\nMultiple R-squared:  0.8869,    Adjusted R-squared:  0.8782 \nF-statistic:   103 on 14 and 184 DF,  p-value: &lt; 2.2e-16\n\n\n\nsqrt(mean(lm3$residuals^2))\n\n[1] 266.3926\n\n\n\nlm4 &lt;- lm(body_mass_g ~ flipper_length_mm + sex + island:bill_length_mm + year, data = d_train_ohneNA )\nsummary(lm4)\n\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm + sex + island:bill_length_mm + \n    year, data = d_train_ohneNA)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-768.8 -184.7    2.7  192.6 1079.4 \n\nCoefficients:\n                                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                    165831.813  53955.688   3.073  0.00242 ** \nflipper_length_mm                  35.375      2.897  12.209  &lt; 2e-16 ***\nsexmale                           373.106     48.119   7.754 5.09e-13 ***\nyear                              -84.349     26.900  -3.136  0.00198 ** \nislandBiscoe:bill_length_mm        14.589      6.484   2.250  0.02559 *  \nislandDream:bill_length_mm          3.646      5.891   0.619  0.53677    \nislandTorgersen:bill_length_mm      6.881      6.874   1.001  0.31803    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 302.5 on 192 degrees of freedom\n  (6 Beobachtungen als fehlend gelöscht)\nMultiple R-squared:  0.8592,    Adjusted R-squared:  0.8548 \nF-statistic: 195.3 on 6 and 192 DF,  p-value: &lt; 2.2e-16\n\n\n\nsqrt(mean(lm4$residuals^2))\n\n[1] 297.118\n\n\n\nlm5 &lt;- lm(body_mass_g ~ .+flipper_length_mm:species + island:bill_depth_mm + island:bill_length_mm + bill_length_mm:sex, data = d_train_ohneNA )\nsummary(lm5)\n\n\nCall:\nlm(formula = body_mass_g ~ . + flipper_length_mm:species + island:bill_depth_mm + \n    island:bill_length_mm + bill_length_mm:sex, data = d_train_ohneNA)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-548.03 -110.28    9.74  105.87  655.87 \n\nCoefficients:\n                                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                         2.244e+05  3.583e+04   6.263 2.67e-09 ***\nID                                  7.537e+00  5.164e-01  14.597  &lt; 2e-16 ***\nspeciesChinstrap                    2.685e+02  1.069e+03   0.251 0.802016    \nspeciesGentoo                       4.427e+02  1.174e+03   0.377 0.706417    \nislandDream                         2.271e+03  6.069e+02   3.743 0.000244 ***\nislandTorgersen                     2.602e+03  7.904e+02   3.292 0.001194 ** \nbill_length_mm                      3.488e+01  9.044e+00   3.857 0.000159 ***\nbill_depth_mm                       6.687e+01  2.612e+01   2.559 0.011300 *  \nflipper_length_mm                   1.266e+01  3.591e+00   3.527 0.000532 ***\nsexmale                             2.192e+02  2.836e+02   0.773 0.440441    \nyear                               -1.126e+02  1.791e+01  -6.287 2.35e-09 ***\nspeciesChinstrap:flipper_length_mm -2.326e+00  5.559e+00  -0.418 0.676155    \nspeciesGentoo:flipper_length_mm    -1.780e+00  5.584e+00  -0.319 0.750250    \nislandDream:bill_depth_mm          -4.055e+01  3.473e+01  -1.167 0.244550    \nislandTorgersen:bill_depth_mm      -7.696e+01  3.760e+01  -2.047 0.042098 *  \nislandDream:bill_length_mm         -4.246e+01  1.302e+01  -3.262 0.001322 ** \nislandTorgersen:bill_length_mm     -3.271e+01  1.426e+01  -2.294 0.022961 *  \nbill_length_mm:sexmale             -1.485e+00  6.349e+00  -0.234 0.815364    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 183.4 on 181 degrees of freedom\n  (6 Beobachtungen als fehlend gelöscht)\nMultiple R-squared:  0.9512,    Adjusted R-squared:  0.9466 \nF-statistic: 207.5 on 17 and 181 DF,  p-value: &lt; 2.2e-16\n\n\n\nsqrt(mean(lm5$residuals^2))\n\n[1] 174.9401\n\n\n\nlm6 &lt;- lm(body_mass_g ~ species + island + bill_length_mm + bill_depth_mm + flipper_length_mm + sex + year + species:flipper_length_mm  + island:bill_depth_mm + island:bill_length_mm + bill_length_mm:sex, data = d_train_ohneNA)\nsummary(lm6)\n\n\nCall:\nlm(formula = body_mass_g ~ species + island + bill_length_mm + \n    bill_depth_mm + flipper_length_mm + sex + year + species:flipper_length_mm + \n    island:bill_depth_mm + island:bill_length_mm + bill_length_mm:sex, \n    data = d_train_ohneNA)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-693.23 -164.70    4.26  168.33  789.05 \n\nCoefficients:\n                                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                        129567.602  51852.791   2.499  0.01335 *  \nspeciesChinstrap                     -698.016   1570.314  -0.445  0.65720    \nspeciesGentoo                        2115.001   1718.533   1.231  0.22002    \nislandDream                          2633.265    892.266   2.951  0.00358 ** \nislandTorgersen                      3324.224   1160.785   2.864  0.00468 ** \nbill_length_mm                         52.471     13.190   3.978  0.00010 ***\nbill_depth_mm                         111.849     38.173   2.930  0.00382 ** \nflipper_length_mm                      21.082      5.215   4.043 7.79e-05 ***\nsexmale                              1038.174    409.010   2.538  0.01198 *  \nyear                                  -66.761     25.948  -2.573  0.01088 *  \nspeciesChinstrap:flipper_length_mm      2.959      8.162   0.363  0.71739    \nspeciesGentoo:flipper_length_mm        -6.595      8.203  -0.804  0.42249    \nislandDream:bill_depth_mm             -58.793     51.077  -1.151  0.25121    \nislandTorgersen:bill_depth_mm        -117.569     55.170  -2.131  0.03443 *  \nislandDream:bill_length_mm            -43.172     19.154  -2.254  0.02539 *  \nislandTorgersen:bill_length_mm        -33.477     20.985  -1.595  0.11238    \nbill_length_mm:sexmale                -16.387      9.221  -1.777  0.07721 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 269.9 on 182 degrees of freedom\n  (6 Beobachtungen als fehlend gelöscht)\nMultiple R-squared:  0.8938,    Adjusted R-squared:  0.8844 \nF-statistic:  95.7 on 16 and 182 DF,  p-value: &lt; 2.2e-16\n\n\n\nsqrt(mean(lm6$residuals^2))\n\n[1] 258.1289",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Probeklausur Lösungsansatz</span>"
    ]
  },
  {
    "objectID": "Probeklausur.html#nützliche-links",
    "href": "Probeklausur.html#nützliche-links",
    "title": "13  Probeklausur Lösungsansatz",
    "section": "13.4 Nützliche Links",
    "text": "13.4 Nützliche Links\nLinear Regression Summary in R\nLinear Regression, Clearly Explained!!!\nyoutube.com/sebastiansauerstatistics",
    "crumbs": [
      "Fallstudien Modellierung",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Probeklausur Lösungsansatz</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Fallstudie_Penguins_Aufg.html",
    "href": "QM1_Tut_Fallstudie_Penguins_Aufg.html",
    "title": "14  Fallstudie Penguins Aufgaben",
    "section": "",
    "text": "14.1 Explorative Datenanalyse",
    "crumbs": [
      "Fallstudien Aufgaben",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Fallstudie Penguins Aufgaben</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Fallstudie_Penguins_Aufg.html#explorative-datenanalyse",
    "href": "QM1_Tut_Fallstudie_Penguins_Aufg.html#explorative-datenanalyse",
    "title": "14  Fallstudie Penguins Aufgaben",
    "section": "",
    "text": "14.1.1 Teil 1\n\n14.1.1.1 Pakete laden\nLade die erforderlichen Pakte (tidyverse, visdat)\n\n\n14.1.1.2 Datenimport\nImportiere den penguins Datensatz:\nhttps://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv”\n\n\n14.1.1.3 Datenjudo\nLass dir die obersten Zeilen ausgeben\nVerschaffe dir einen Überblick über die Variablentypen\nPrüfe auf fehlende Werte\nPrüfe die Variablen auf Ausreißer/Extremwerte\n\n\n14.1.1.4 Datenvisualisierung\nSieh dir die Verteilung von flipper_length_mm an\nSieh dir die Verteilung von flipper_length_mm in Abhängigkeit von der Spezies an\nSieh dir die Verteilung der verschiedenen Spezies auf die unterschiedlichen Inseln an\nSieh dir die Verteilung der Geschlechter unter den verschiedenen Spezies an\nSieh dir das Verhältnis von body_mass_g zu filpper_length_mm in Abhängigkeit der Spezies an und hebe, falls vorhanden, einen linearen Trend hervor\nSieh dir das Verhältnis von body_mass_g zu filpper_length_mm in Abhängigkeit des Geschlechts für jede Spezies an\n\n\n\n14.1.2 Teil 2\n\n14.1.2.1 Datenjudo\nWandle Ausreißer in NA um\nErsetze alle NAs mit einem repräsentativen Wert\nErstelle eine Korrelationsmatrix mit allen Variablen\nIm Folgenden soll Flipper_Length als AV betrachtet werden. Lass dir nur die Korrelationen mit dieser Variable ausgeben\n\n\n14.1.2.2 Datenvisualisierung\nErstelle einen Korrelationsplot",
    "crumbs": [
      "Fallstudien Aufgaben",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Fallstudie Penguins Aufgaben</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Fallstudie_Penguins_Aufg.html#vorhersagemodellierung",
    "href": "QM1_Tut_Fallstudie_Penguins_Aufg.html#vorhersagemodellierung",
    "title": "14  Fallstudie Penguins Aufgaben",
    "section": "14.2 Vorhersagemodellierung",
    "text": "14.2 Vorhersagemodellierung\n\n14.2.1 Einfaches lineares Modell\nErstelle ein lineares Modell, das flipper_length_mm mit Hilfe von einem Prädiktor vorhersagt.\nLass dir außerdem die Modellgüte ausgeben und plotte das Modell.",
    "crumbs": [
      "Fallstudien Aufgaben",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Fallstudie Penguins Aufgaben</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Fallstudie_Penguins_Loes.html",
    "href": "QM1_Tut_Fallstudie_Penguins_Loes.html",
    "title": "15  Fallstudie Penguins Lösungen",
    "section": "",
    "text": "15.1 Pakete laden\nLade die erforderlichen Pakte (tidyverse, visdat)\nlibrary(tidyverse)\nlibrary(visdat)",
    "crumbs": [
      "Fallstudien Aufgaben",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Fallstudie Penguins Lösungen</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Fallstudie_Penguins_Loes.html#datenimport",
    "href": "QM1_Tut_Fallstudie_Penguins_Loes.html#datenimport",
    "title": "15  Fallstudie Penguins Lösungen",
    "section": "15.2 Datenimport",
    "text": "15.2 Datenimport\nImportiere den penguins Datensatz:\n\npenguins &lt;- read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv\")",
    "crumbs": [
      "Fallstudien Aufgaben",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Fallstudie Penguins Lösungen</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Fallstudie_Penguins_Loes.html#datenjudo",
    "href": "QM1_Tut_Fallstudie_Penguins_Loes.html#datenjudo",
    "title": "15  Fallstudie Penguins Lösungen",
    "section": "15.3 Datenjudo",
    "text": "15.3 Datenjudo\nLass dir die obersten Zeilen ausgeben\n\npenguins %&gt;% \n  head()\n\n\n  \n\n\n\nVerschaffe dir einen Überblick über die Variablentypen\n\npenguins %&gt;% \n  sapply(class)\n\n         rownames           species            island    bill_length_mm \n        \"integer\"       \"character\"       \"character\"         \"numeric\" \n    bill_depth_mm flipper_length_mm       body_mass_g               sex \n        \"numeric\"         \"integer\"         \"integer\"       \"character\" \n             year \n        \"integer\" \n\n\nPrüfe auf fehlende Werte\n\npenguins %&gt;% \n  summarise((across(everything(),~sum(is.na(.x)))))\n\n\n  \n\n\n\nPrüfe die Variablen auf Ausreißer/Extremwerte\n\n# Am Beipiel von flipper_length_mm:\n\nggplot(penguins, aes(flipper_length_mm))+\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).",
    "crumbs": [
      "Fallstudien Aufgaben",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Fallstudie Penguins Lösungen</span>"
    ]
  },
  {
    "objectID": "QM1_Tut_Fallstudie_Penguins_Loes.html#datenvisualisierung",
    "href": "QM1_Tut_Fallstudie_Penguins_Loes.html#datenvisualisierung",
    "title": "15  Fallstudie Penguins Lösungen",
    "section": "15.4 Datenvisualisierung",
    "text": "15.4 Datenvisualisierung\nPlotte die Variablentypen\n\nvis_dat(penguins)\n\n\n\n\n\n\n\n\nSieh dir die Verteilung von flipper_length_mm an\n\nggplot(penguins, aes(x = flipper_length_mm)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nSieh dir die Verteilung von flipper_length_mm in Abhängigkeit von der Spezies an\n\nggplot(penguins, aes(x = flipper_length_mm)) +\n  geom_histogram(aes(fill = species),  alpha = 0.7)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nSieh dir die Verteilung der verschiedenen Spezies auf die unterschiedlichen Inseln an\n\nggplot(penguins, aes(x = island, fill = species)) +\n  geom_bar(alpha = 0.8) +\n  facet_wrap(~species, ncol = 1) +\n  coord_flip()\n\n\n\n\n\n\n\n\nSieh dir die Verteilung der Geschlechter unter den verschiedenen Spezies an\n\nggplot(penguins, aes(x = sex, fill = species)) +\n  geom_bar(alpha = 0.8) +\n  facet_wrap(~species, ncol = 1) +\n  coord_flip()\n\n\n\n\n\n\n\n\nSieh dir das Verhältnis von body_mass_g zu flipper_length_mm in Abhängigkeit der Spezies an und hebe, falls vorhanden, einen linearen Trend hervor\n\nggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(color = species, \n                 shape = species))+\n  geom_smooth(method = lm)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nSieh dir das Verhältnis von body_mass_g zu flipper_length_mm in Abhängigkeit des Geschlechts für jede Spezies an\n\nggplot(penguins, aes(x = flipper_length_mm,\n                     y = body_mass_g)) +\n  geom_point(aes(color = sex)) +\n  facet_wrap(~species)\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "Fallstudien Aufgaben",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Fallstudie Penguins Lösungen</span>"
    ]
  }
]